buildscript {
	ext {
		springBootVersion = '2.7.17'
	}
	repositories {
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.17'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.cwpark.petmap.petmap'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '1.8'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	testImplementation("org.junit.vintage:junit-vintage-engine") {
		exclude group: "org.hamcrest", module: "hamcrest-core"
	}

	// Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// Spring Security Test
	testImplementation 'org.springframework.security:spring-security-test'

	// JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// Maria DB
	implementation 'org.mariadb.jdbc:mariadb-java-client:2.7.9'

	// Querydsl
	implementation 'com.querydsl:querydsl-apt'
	implementation 'com.querydsl:querydsl-jpa'

	// Thymeleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	//Thymeleaf Security
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'

	// Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Swagger
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	implementation 'io.springfox:springfox-swagger-ui:3.0.0'

	// Jasypt
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'

	// Gson
	implementation 'com.google.code.gson:gson'

	// Email
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// Redisson
	implementation 'org.redisson:redisson-spring-boot-starter:3.16.8'

	// Json
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'

	// Batch
	implementation 'org.springframework.boot:spring-boot-starter-batch'

	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
}

def querydslSrcDir = 'src/main/generated'
sourceSets {
	main {
		java {
			srcDirs += [ querydslSrcDir ]
		}
	}
}

compileJava {
	options.compilerArgs << '-Aquerydsl.generatedAnnotationClass=javax.annotation.Generated'
}

tasks.withType(JavaCompile) {
	options.generatedSourceOutputDirectory = file(querydslSrcDir)
}

clean {
	delete file(querydslSrcDir)
}

test {
	useJUnitPlatform()
}
